#!/bin/sh

#This script will watch Plex Media Server and ensure it continues to run on the servr

#What method to use when watching Plex Media Server
#NOTE: CMD method is experimental and will not work in its current form
#CMD - Launches Plex Media Server and only continues if it crashes
#PID - Checks for the Plex Media Server PID every couple seconds

METHOD="PID"

#Send email when down?

#0 = no
#1 = yes

EMAIL_ON_ERROR=1

EMAIL_ADDR="" #not used but can be used for sending email instead
USER_KEY="" #Pushover user key
APP_KEY="" #Pushoever app key


#Time between sending emails in seconds
EMAIL_TIMEOUT=600

#Start program (Do not edit)

LAST_EMAIL_SEND=0

if [ ! -f /var/lib/plexmediaserver/watch/runlog ]; then
    touch /var/lib/plexmediaserver/watch/runlog || ( logger "Error running plexmediaserver-watch"; exit 1 )
fi

echo "======================================" >> /var/lib/plexmediaserver/watch/runlog
echo $(date) >> /var/lib/plexmediaserver/watch/runlog
echo "param 0 is $0" >> /var/lib/plexmediaserver/watch/runlog
echo $1 >> /var/lib/plexmediaserver/watch/runlog
echo $EMAIL_ON_ERROR >> /var/lib/plexmediaserver/watch/runlog
echo $METHOD >> /var/lib/plexmediaserver/watch/runlog
echo $(dirname $0) >> /var/lib/plexmediaserver/watch/runlog


#Move to script dir
#dirname gets the containing dir of the file path
cd `dirname $0`
if [ $# -lt 1 ]; then
  echo "Improper number of parameters" >> /var/lib/plexmediaserver/watch/runlog
fi

LOG=$1

#Make sure log is set and we can write to it

if [ -z "${LOG}" ]; then
  echo "Set the log file as the first parameter" >>/var/lib/plexmediaserver/watch/runlog
  exit 1
fi

echo "start successfull" >>runlog
#What does shift do?
#shift
while [ 1 ]
do
  #Create log if it doesn't exist
  if [ ! -f ${LOG} ]; then
    touch ${LOG} || ( echo "Logfile '${LOG}' is not writeable" >>/var/lib/plexmediaserver/watch/runlog; exit 1 )
  fi
  
  #Check log is writeable
  if [ ! -w ${LOG} ]; then
    echo "Logfile '${LOG}' is not writeable" >> /var/lib/plexmediaserver/watch/runlog
    exit 1
  fi
  
  
  BCDOWN=0
  
  #watch bitcasa in selected manner
  
  case $METHOD in
    'PID')
        if ! pidof -x "Plex Media Server" > /dev/null ; then
          BCDOWN=1
          service plexmediaserver start >> ${LOG}
        fi
        ;;
    'CMD')
        #With this method the idea is that the script will not continue past the next line until it crashes. This also assumes Bitcasa is currently not  running
        #This WONT work because of the way we're calling this command and if bitcasa fails to launch it wont continue
        #export DISPLAY:$DISPLAY; Bitcasa & >> ${LOG}
        METHOD="PID"
        BCDOWN=1
        ;;
    *)
        echo "Error. Incorrect param '${METHOD}' specified for param METHOD" >> ${LOG}
        exit 1
        ;;
  esac

  if [ $BCDOWN = 1 ]; then
    #send email
      if [ $EMAIL_ON_ERROR = 1 ]; then
        TIME_NOW=$(date +%s)
        TIME_SINCE_LAST_SEND=$(($TIME_NOW - $LAST_EMAIL_SEND))
        if [ $TIME_SINCE_LAST_SEND -gt $EMAIL_TIMEOUT ]; then
            curl -s -F "token=${APP_KEY}" -F "user=${USER_KEY}" -F \
            "message=Plex Media Server was restarted at $(date)\nThe last 30 lines of the log before the error happens:\n $(tail -n 30 ${LOG})" \
            https://api.pushover.net/1/messages.json
            LAST_EMAIL_SEND=$TIME_NOW

         fi
      fi
      echo "$(date) [ERROR] Restarting Plex Media Server" >> ${LOG}
      #wait for bc to start back up
      sleep 300
  else
    sleep 600
  fi
done
