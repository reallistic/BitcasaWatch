#!/bin/sh
### BEGIN INIT INFO
# Provides:          Bitcasa-watch
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: watches Bitcasa
# Description:       staryts and watches bitcasa using start-stop-daemon
### END INIT INFO

#This script was based off of a mixture of the /etc/init.d/skeleton and etherpad-lite
PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/node/bin"
DESC="Bitcasa-watch"
NAME=bitcasa-watch
DAEMON=/var/lib/plexmediaserver/watch/$NAME
SCRIPTNAME=/etc/init.d/$NAME
USER=root
GROUP=root
LOGFILE="bitcasa-watch.log"

# Exit if script unavailable
[ -x "$DAEMON" ] || exit 0

. /lib/lsb/init-functions

do_start()
{
    #check if already running
    [ ! -e /var/run/$NAME.pid ] || return 1
    start-stop-daemon --start --chuid "$USER:$GROUP" --background --make-pidfile --pidfile /var/run/$NAME.pid --exec $DAEMON -- ${LOGFILE} || return 2
}

killtree()
{
    local _pid=$1
    local _sig=${2-TERM}
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        killtree ${_child} ${_sig}
    done
    kill -${_sig} ${_pid}
}

do_stop()
{
    [ -e /var/run/$NAME.pid ] || return 1
    while test -d /proc/$(cat /var/run/$NAME.pid); do
      killtree $(cat /var/run/$NAME.pid) 15
      sleep 0.5
    done
    rm /var/run/$NAME.pid
    return 0
}

case "$1" in
  start)
        log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
                0|1) log_end_msg 0 ;;
                2) log_end_msg 1  ;;
                *) echo "\nError";;
        esac
        ;;
  stop)
        log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0) log_end_msg 0 ;;
                1) log_end_msg 0; echo " already running";;
                2) log_end_msg 1;;
        esac
        ;;
  status)
        status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop}" >&2
        ;;
esac

exit 0
